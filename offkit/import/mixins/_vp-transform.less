/******************************************************
*
* MIXINS/_VP-TRANSFORM.LESS
*
* Description:
*
* Requiered:
* _variables.less (@auto-perfixer)
*
*******************************************************/


.transform(@string) when not(@auto-prefixer = true) {
	-webkit-transform:  @string;
	-moz-transform:     @string;
	-ms-transform:      @string;
	-o-transform:       @string;
	transform:          @string;
}

.transform(@string) when (@auto-prefixer = true) {
	transform:          @string;
}

/******************************************************/

.transform-origin(@string) when not(@auto-prefixer = true) {
	-webkit-transform-origin:  @string;
	-moz-transform-origin:     @string;
	-ms-transform-origin:      @string;
	-o-transform-origin:       @string;
	transform-origin:          @string;
}

.transform-origin(@string) when (@auto-prefixer = true) {
	transform-origin:          @string;
}

/******************************************************/

.transform-style(@string:preserve-3d) when not(@auto-prefixer = true) {
	-webkit-transform-style:  @string;
	transform-style:          @string;
}

.transform-style(@string:preserve-3d) when (@auto-prefixer = true) {
	transform-style:          @string;
}

/******************************************************/

.rotate(@deg) when not(@auto-prefixer = true) {
	-webkit-transform:  rotate(@deg);
	-moz-transform:     rotate(@deg);
	-ms-transform:      rotate(@deg);
	-o-transform:       rotate(@deg);
	transform:          rotate(@deg);
}

.rotate(@deg) when (@auto-prefixer = true) {
	transform:          rotate(@deg);
}

/******************************************************/

.scale(@factor) when not(@auto-prefixer = true) {
	-webkit-transform:  scale(@factor);
	-moz-transform:     scale(@factor);
	-ms-transform:      scale(@factor);
	-o-transform:       scale(@factor);
	transform:          scale(@factor);
}

.scale(@factor) when (@auto-prefixer = true) {
	transform:          scale(@factor);
}

/******************************************************/

.translate(@x, @y) when not(@auto-prefixer = true) {
	-webkit-transform:  translate(@x, @y);
	-moz-transform:     translate(@x, @y);
	-ms-transform:      translate(@x, @y);
	-o-transform:       translate(@x, @y);
	transform:          translate(@x, @y);
}

.translate(@x, @y) when (@auto-prefixer = true) {
	transform:          translate(@x, @y);
}

/******************************************************/

.translate3D(@x, @y, @z) when not(@auto-prefixer = true) {
	-webkit-transform:  translate3D(@x, @y, @z);
	-moz-transform:     translate3D(@x, @y, @z);
	-ms-transform:      translate3D(@x, @y, @z);
	-o-transform:       translate3D(@x, @y, @z);
	transform:          translate3D(@x, @y, @z);
}

.translate3D(@x, @y, @z) when (@auto-prefixer = true) {
	transform:          translate3D(@x, @y, @z);
}

/******************************************************/

.translateX(@x) when not(@auto-prefixer = true) {
	-webkit-transform:  translateX(@x);
	-moz-transform:     translateX(@x);
	-ms-transform:      translateX(@x);
	-o-transform:       translateX(@x);
	transform:          translateX(@x);
}

.translateX(@x) when (@auto-prefixer = true) {
	transform:          translateX(@x);
}

/******************************************************/

.translateY(@y) when not(@auto-prefixer = true) {
	-webkit-transform:  translateY(@y);
	-moz-transform:     translateY(@y);
	-ms-transform:      translateY(@y);
	-o-transform:       translateY(@y);
	transform:          translateY(@y);
}

.translateY(@y) when (@auto-prefixer = true) {
	transform:          translateY(@y);
}

/******************************************************/

.translateZ(@z) when not(@auto-prefixer = true) {
	-webkit-transform:  translateZ(@z);
	-moz-transform:     translateZ(@z);
	-ms-transform:      translateZ(@z);
	-o-transform:       translateZ(@z);
	transform:          translateZ(@z);
}

.translateZ(@z) when (@auto-prefixer = true) {
	transform:          translateZ(@z);
}

/******************************************************/

.skew(@degX, @degY) when not(@auto-prefixer = true) {
	-webkit-transform:  skew(@degX, @degY);
	-moz-transform:     skew(@degX, @degY);
	-ms-transform:      skew(@degX, @degY);
	-o-transform:       skew(@degX, @degY);
	transform:          skew(@degX, @degY);
}

.skew(@degX, @degY) when (@auto-prefixer = true) {
	transform:          skew(@degX, @degY);
}